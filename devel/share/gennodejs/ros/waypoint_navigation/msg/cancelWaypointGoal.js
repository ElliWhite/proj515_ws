// Auto-generated. Do not edit!

// (in-package waypoint_navigation.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;
let actionlib_msgs = _finder('actionlib_msgs');

//-----------------------------------------------------------

class cancelWaypointGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.move_base_cancel_goal = null;
    }
    else {
      if (initObj.hasOwnProperty('move_base_cancel_goal')) {
        this.move_base_cancel_goal = initObj.move_base_cancel_goal
      }
      else {
        this.move_base_cancel_goal = new actionlib_msgs.msg.GoalID();
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type cancelWaypointGoal
    // Serialize message field [move_base_cancel_goal]
    bufferOffset = actionlib_msgs.msg.GoalID.serialize(obj.move_base_cancel_goal, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type cancelWaypointGoal
    let len;
    let data = new cancelWaypointGoal(null);
    // Deserialize message field [move_base_cancel_goal]
    data.move_base_cancel_goal = actionlib_msgs.msg.GoalID.deserialize(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += actionlib_msgs.msg.GoalID.getMessageSize(object.move_base_cancel_goal);
    return length;
  }

  static datatype() {
    // Returns string type for a message object
    return 'waypoint_navigation/cancelWaypointGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '487ad5210dbeac2124197170aef2cfd3';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # Cancel the goal
    actionlib_msgs/GoalID move_base_cancel_goal
    
    ================================================================================
    MSG: actionlib_msgs/GoalID
    # The stamp should store the time at which this goal was requested.
    # It is used by an action server when it tries to preempt all
    # goals that were requested before a certain time
    time stamp
    
    # The id provides a way to associate feedback and
    # result message with specific goal requests. The id
    # specified must be unique.
    string id
    
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new cancelWaypointGoal(null);
    if (msg.move_base_cancel_goal !== undefined) {
      resolved.move_base_cancel_goal = actionlib_msgs.msg.GoalID.Resolve(msg.move_base_cancel_goal)
    }
    else {
      resolved.move_base_cancel_goal = new actionlib_msgs.msg.GoalID()
    }

    return resolved;
    }
};

module.exports = cancelWaypointGoal;
