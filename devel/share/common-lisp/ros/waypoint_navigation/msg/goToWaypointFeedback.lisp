; Auto-generated. Do not edit!


(cl:in-package waypoint_navigation-msg)


;//! \htmlinclude goToWaypointFeedback.msg.html

(cl:defclass <goToWaypointFeedback> (roslisp-msg-protocol:ros-message)
  ((move_base_goal_status
    :reader move_base_goal_status
    :initarg :move_base_goal_status
    :type actionlib_msgs-msg:GoalStatusArray
    :initform (cl:make-instance 'actionlib_msgs-msg:GoalStatusArray)))
)

(cl:defclass goToWaypointFeedback (<goToWaypointFeedback>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <goToWaypointFeedback>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'goToWaypointFeedback)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name waypoint_navigation-msg:<goToWaypointFeedback> is deprecated: use waypoint_navigation-msg:goToWaypointFeedback instead.")))

(cl:ensure-generic-function 'move_base_goal_status-val :lambda-list '(m))
(cl:defmethod move_base_goal_status-val ((m <goToWaypointFeedback>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader waypoint_navigation-msg:move_base_goal_status-val is deprecated.  Use waypoint_navigation-msg:move_base_goal_status instead.")
  (move_base_goal_status m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <goToWaypointFeedback>) ostream)
  "Serializes a message object of type '<goToWaypointFeedback>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'move_base_goal_status) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <goToWaypointFeedback>) istream)
  "Deserializes a message object of type '<goToWaypointFeedback>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'move_base_goal_status) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<goToWaypointFeedback>)))
  "Returns string type for a message object of type '<goToWaypointFeedback>"
  "waypoint_navigation/goToWaypointFeedback")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'goToWaypointFeedback)))
  "Returns string type for a message object of type 'goToWaypointFeedback"
  "waypoint_navigation/goToWaypointFeedback")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<goToWaypointFeedback>)))
  "Returns md5sum for a message object of type '<goToWaypointFeedback>"
  "65e9359ec3448e8c63e8d7deb2ac0003")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'goToWaypointFeedback)))
  "Returns md5sum for a message object of type 'goToWaypointFeedback"
  "65e9359ec3448e8c63e8d7deb2ac0003")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<goToWaypointFeedback>)))
  "Returns full string definition for message of type '<goToWaypointFeedback>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Define the feedback~%actionlib_msgs/GoalStatusArray move_base_goal_status~%~%================================================================================~%MSG: actionlib_msgs/GoalStatusArray~%# Stores the statuses for goals that are currently being tracked~%# by an action server~%Header header~%GoalStatus[] status_list~%~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalStatus~%GoalID goal_id~%uint8 status~%uint8 PENDING         = 0   # The goal has yet to be processed by the action server~%uint8 ACTIVE          = 1   # The goal is currently being processed by the action server~%uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing~%                            #   and has since completed its execution (Terminal State)~%uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)~%uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due~%                            #    to some failure (Terminal State)~%uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,~%                            #    because the goal was unattainable or invalid (Terminal State)~%uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing~%                            #    and has not yet completed execution~%uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,~%                            #    but the action server has not yet confirmed that the goal is canceled~%uint8 RECALLED        = 8   # The goal received a cancel request before it started executing~%                            #    and was successfully cancelled (Terminal State)~%uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be~%                            #    sent over the wire by an action server~%~%#Allow for the user to associate a string with GoalStatus for debugging~%string text~%~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'goToWaypointFeedback)))
  "Returns full string definition for message of type 'goToWaypointFeedback"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Define the feedback~%actionlib_msgs/GoalStatusArray move_base_goal_status~%~%================================================================================~%MSG: actionlib_msgs/GoalStatusArray~%# Stores the statuses for goals that are currently being tracked~%# by an action server~%Header header~%GoalStatus[] status_list~%~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalStatus~%GoalID goal_id~%uint8 status~%uint8 PENDING         = 0   # The goal has yet to be processed by the action server~%uint8 ACTIVE          = 1   # The goal is currently being processed by the action server~%uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing~%                            #   and has since completed its execution (Terminal State)~%uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)~%uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due~%                            #    to some failure (Terminal State)~%uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,~%                            #    because the goal was unattainable or invalid (Terminal State)~%uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing~%                            #    and has not yet completed execution~%uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,~%                            #    but the action server has not yet confirmed that the goal is canceled~%uint8 RECALLED        = 8   # The goal received a cancel request before it started executing~%                            #    and was successfully cancelled (Terminal State)~%uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be~%                            #    sent over the wire by an action server~%~%#Allow for the user to associate a string with GoalStatus for debugging~%string text~%~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <goToWaypointFeedback>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'move_base_goal_status))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <goToWaypointFeedback>))
  "Converts a ROS message object to a list"
  (cl:list 'goToWaypointFeedback
    (cl:cons ':move_base_goal_status (move_base_goal_status msg))
))
